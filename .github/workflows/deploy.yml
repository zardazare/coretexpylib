name: Manual Env Deploy

on:
  workflow_dispatch:
    inputs:
      destination_branch:
        type: choice
        description: 'Destination environment'
        required: true
        default: 'stage'
        options: ['stage', 'main']

jobs:
  version-bump:
    uses: ./.github/workflows/version-bump.yml

  stage-merge:
    if: |
      always()
    needs: version-bump
    runs-on: ubuntu-latest

    steps:
      - name: Check if user is allowed to execute the workflow
        run: |
          if [[ "${{ github.event_name }}" == 'workflow_dispatch' && ("${{ github.actor }}" != 'coretex-admin' && "${{ github.actor }}" != 'igorperic17' && "${{ github.actor }}" != 'dule1322' && "${{ github.repository_owner }}" != "${{ github.actor }}" ) ]]; then
            echo "::error::You are not authorized to execute this workflow."
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Merge develop into destination branch
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

          git fetch
          git checkout stage
          git pull
          git pull --rebase origin develop
          git push --force

  prod-merge:
    needs: stage-merge
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.destination_branch == 'main' }}

    steps:
      - name: Check if user is allowed to execute the workflow
        run: |
          if [[ "${{ github.event_name }}" == 'workflow_dispatch' && ("${{ github.actor }}" != 'coretex-admin' && "${{ github.actor }}" != 'igorperic17' && "${{ github.actor }}" != 'dule1322' && "${{ github.repository_owner }}" != "${{ github.actor }}" ) ]]; then
            echo "::error::You are not authorized to execute this workflow."
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Merge develop into destination branch
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

          git fetch
          git checkout main
          git pull
          git pull --rebase origin stage
          git push --force

  deploy-pypi:
    needs: prod-merge
    if: ${{ (github.event.inputs.destination_branch == 'main') && success() }}
    uses: ./.github/workflows/python-publish.yml
    secrets:
      PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
